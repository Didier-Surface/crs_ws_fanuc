<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">
  <xacro:include filename="$(find fanuc_resources)/urdf/common_materials.xacro"/>

  <xacro:macro name="fanuc_r2000ic165f" params="prefix">
    <!-- links: main serial chain -->
    <link name="world" />
    <joint name="${prefix}world_base_link" type="fixed">
        <parent link="world" />
        <child link="${prefix}base_link" />
        <origin rpy="0 0 0" xyz="-2.5 0 0" />
    </joint>

    <link name="${prefix}base_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/visual/base_link.stl"/>
        </geometry>
        <xacro:material_fanuc_gray40 />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/collision/base_link.stl"/>
        </geometry>
      </collision>
    </link>
    <link name="${prefix}link_1">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/visual/link_1.stl"/>
        </geometry>
        <xacro:material_fanuc_yellow />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/collision/link_1.stl"/>
        </geometry>
      </collision>
    </link>
    <link name="${prefix}link_2">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/visual/link_2.stl"/>
        </geometry>
        <xacro:material_fanuc_yellow />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/collision/link_2.stl"/>
        </geometry>
      </collision>
    </link>
    <link name="${prefix}link_3">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/visual/link_3.stl"/>
        </geometry>
        <xacro:material_fanuc_yellow />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/collision/link_3.stl"/>
        </geometry>
      </collision>
    </link>
    <link name="${prefix}link_4">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/visual/link_4.stl"/>
        </geometry>
        <xacro:material_fanuc_yellow />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/collision/link_4.stl"/>
        </geometry>
      </collision>
    </link>
    <link name="${prefix}link_5">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/visual/link_5.stl"/>
        </geometry>
        <xacro:material_fanuc_yellow />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/collision/link_5.stl"/>
        </geometry>
      </collision>
    </link>
    <link name="${prefix}link_6">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/visual/link_6.stl"/>
        </geometry>
        <xacro:material_fanuc_black />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/collision/link_6.stl"/>
        </geometry>
      </collision>
    </link>

    <!-- joints: main serial chain -->
    <joint name="${prefix}joint_1" type="revolute">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="${prefix}base_link"/>
      <child link="${prefix}link_1"/>
      <axis xyz="0 0 1"/>
      <limit lower="${radians(-185)}" upper="${radians(185)}" effort="0" velocity="${radians(130)}"/>
    </joint>
    <joint name="${prefix}joint_2" type="revolute">
      <origin xyz="0.312 0 0.670" rpy="0 0 0"/>
      <parent link="${prefix}link_1"/>
      <child link="${prefix}link_2"/>
      <axis xyz="0 1 0"/>
      <limit lower="${radians(-60)}" upper="${radians(76)}" effort="0" velocity="${radians(115)}"/>
    </joint>
    <joint name="${prefix}joint_3" type="revolute">
      <origin xyz="0 0 1.075" rpy="0 0 0"/>
      <parent link="${prefix}link_2"/>
      <child link="${prefix}link_3"/>
      <axis xyz="0 -1 0"/>
      <limit lower="${radians(-132)}" upper="${radians(180)}" effort="0" velocity="${radians(125)}"/>
    </joint>
    <joint name="${prefix}joint_4" type="revolute">
      <origin xyz="0 0 0.225" rpy="0 0 0"/>
      <parent link="${prefix}link_3"/>
      <child link="${prefix}link_4"/>
      <axis xyz="-1 0 0"/>
      <limit lower="${radians(-360)}" upper="${radians(360)}" effort="0" velocity="${radians(180)}"/>
    </joint>
    <joint name="${prefix}joint_5" type="revolute">
      <origin xyz="1.280 0 0" rpy="0 0 0"/>
      <parent link="${prefix}link_4"/>
      <child link="${prefix}link_5"/>
      <axis xyz="0 -1 0"/>
      <limit lower="${radians(-125)}" upper="${radians(125)}" effort="0" velocity="${radians(180)}"/>
    </joint>
    <joint name="${prefix}joint_6" type="revolute">
      <origin xyz="0.215 0 0" rpy="0 0 0"/>
      <parent link="${prefix}link_5"/>
      <child link="${prefix}link_6"/>
      <axis xyz="-1 0 0"/>
      <limit lower="${radians(-360)}" upper="${radians(360)}" effort="0" velocity="${radians(260)}"/>
    </joint>

<!--

<link name="part_link">
  <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <mesh filename="package://fanuc_r2000ic_support/meshes/r2000ic165f/visual/sandpart.stl"/>
    </geometry>
    <material name="">
      <color rgba="0.9 0.7 0.4 1.0"/>
    </material>
  </visual>

</link>

  <joint name="world_part_link" type="fixed">
      <parent link="base_link" />
      <child link="part_link" />
      <origin rpy="0 0 0" xyz="1.4 -0.4 0.6" />
  </joint>-->

    <!-- ROS-Industrial 'base' frame: base_link to Fanuc World Coordinates transform -->
    <link name="${prefix}base" />
    <joint name="${prefix}base_link-base" type="fixed">
      <origin xyz="0 0 0.670" rpy="0 0 0"/>
      <parent link="${prefix}base_link"/>
      <child link="${prefix}base"/>
    </joint>

    <!-- ROS-Industrial 'flange' frame: attachment point for EEF models -->
    <link name="${prefix}flange" />
    <joint name="${prefix}joint_6-flange" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="${prefix}link_6" />
      <child link="${prefix}flange" />
    </joint>

    <!-- ROS-Industrial 'tool0' frame: all-zeros tool frame -->
    <link name="${prefix}tool0" />
    <joint name="${prefix}flange-tool0" type="fixed">
      <origin xyz="0 0 0" rpy="0 ${radians(90)} 0" />
      <parent link="${prefix}flange" />
      <child link="${prefix}tool0" />
    </joint>



<transmission name="joint_1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_1">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="joint_1_motor">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
    </actuator>
</transmission>

<gazebo reference="base_link">
    <selfCollide>true</selfCollide>
</gazebo>
<gazebo reference="link_1">
    <selfCollide>true</selfCollide>
</gazebo>
<gazebo reference="link_2">
    <selfCollide>true</selfCollide>
</gazebo>
<gazebo reference="link_3">
    <selfCollide>true</selfCollide>
</gazebo>
<gazebo reference="link_4">
    <selfCollide>true</selfCollide>
</gazebo>
<gazebo reference="link_5">
    <selfCollide>true</selfCollide>
</gazebo>
<gazebo reference="link_6">
    <selfCollide>true</selfCollide>
</gazebo>
<gazebo reference="joint_1">
    <selfCollide>true</selfCollide>
</gazebo>
<gazebo reference="joint_2">
    <selfCollide>true</selfCollide>
</gazebo>
<gazebo reference="joint_3">
    <selfCollide>true</selfCollide>
</gazebo>


<gazebo reference="base">
    <selfCollide>true</selfCollide>
</gazebo>
<gazebo reference="flange">
    <selfCollide>true</selfCollide>
</gazebo>
<gazebo reference="tool0">
    <selfCollide>true</selfCollide>
</gazebo>
<gazebo reference="gazebo_camera_link">
    <sensor type="depth" name="sensor_name">
      <!-- Set always_on only sensor, not on plugin -->
      <always_on>1</always_on>
      <!-- Set update_rate only sensor, not on plugin -->
      <update_rate>5</update_rate>
      <camera name="camera_name">
        <image>
          <width>320</width>
          <height>200</height>
        </image>
        <distortion>
          <k1>-0.0</k1>
          <k2>0.0</k2>
          <k3>0.0</k3>
          <p1>-0.0</p1>
          <p2>-0.0</p2>
          <center>0.5 0.5</center>
        </distortion>
      </camera>
      <plugin name="plugin_name" filename="libgazebo_ros_camera.so">
        <!-- Change namespace, camera name and topics so:
             * Raw images are published to: /custom_ns/custom_camera/custom_image
             * Depth images are published to: /custom_ns/custom_camera/custom_image_depth
             * Raw image camera info is published to: /custom_ns/custom_camera/custom_info_raw
             * Depth image camera info is published to: /custom_ns/custom_camera/custom_info_depth
             * Point cloud is published to: /custom_ns/custom_camera/custom_points
        -->
        <ros>
          <namespace>custom_ns</namespace>
          <argument>camera/image_raw:=camera/custom_image</argument>
          <argument>camera/image_depth:=camera/custom_image_depth</argument>
          <argument>camera/camera_info:=camera/custom_info_raw</argument>
          <argument>camera/camera_info_depth:=camera/custom_info_depth</argument>
          <argument>camera/points:=camera/pointcloud</argument>
        </ros>
        <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
        <camera_name>camera</camera_name>
        <frame_name>camera_link_optical</frame_name>
        <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
        <hack_baseline>0.07</hack_baseline>
        <!-- No need to repeat distortion parameters or to set autoDistortion -->
         <min_depth>0.1</min_depth>
      </plugin>
    </sensor>
</gazebo>
<gazebo>
    <plugin name='gazebo_ros_joint_state_publisher' filename='libgazebo_ros_joint_state_publisher.so'>
      <ros>
          <namespace>/test</namespace>
          <argument>joint_states:=joint_states</argument>
      </ros>
      <update_rate>50</update_rate>
      <joint_name>joint_1</joint_name>
      <joint_name>joint_2</joint_name>
      <joint_name>joint_3</joint_name>
      <joint_name>joint_4</joint_name>
      <joint_name>joint_5</joint_name>
      <joint_name>joint_6</joint_name>
    </plugin>
    <plugin name='crs_gazebo_plugins_joint_pose_trajectory' filename='libcrs_gazebo_plugins_joint_pose_trajectory.so'>
        <ros>
          <namespace>sim</namespace>
          <argument>follow_joint_trajectory:=follow_joint_trajectory</argument>
        </ros>
        <update_rate>20</update_rate>
    </plugin>
</gazebo>


  </xacro:macro>
</robot>
